/*******************************************************************************
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *  
 *   http://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *  
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.09.08 at 11:57:55 AM IDT 
//

package org.apache.wink.common.model.atom;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import org.apache.wink.common.model.synd.SyndGenerator;

/**
 * The "atom:generator" element Per RFC4287
 * 
 * <pre>
 * The "atom:generator" element's content identifies the agent used to
 * generate a feed, for debugging and other purposes.
 *
 * atomGenerator = element atom:generator {
 *    atomCommonAttributes,
 *    attribute uri { atomUri }?,
 *    attribute version { text }?,
 *    text
 * }
 *
 * The content of this element, when present, MUST be a string that is a
 * human-readable name for the generating agent.  Entities such as
 * "&amp;" and "&lt;" represent their corresponding characters ("&" and
 * "<" respectively), not markup.
 *
 * The atom:generator element MAY have a "uri" attribute whose value
 * MUST be an IRI reference [RFC3987].  When dereferenced, the resulting
 * URI (mapped from an IRI, if necessary) SHOULD produce a
 * representation that is relevant to that agent.
 *
 * The atom:generator element MAY have a "version" attribute that
 * indicates the version of the generating agent.
 *  </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "atomGenerator")
public class AtomGenerator extends AtomCommonAttributesSimpleContent {

    @XmlAttribute
    protected String uri;
    @XmlAttribute
    protected String version;

    public AtomGenerator() {
    }

    public AtomGenerator(SyndGenerator value) {
        super(value);
        if (value == null) {
            return;
        }
        setUri(value.getUri());
        setVersion(value.getVersion());
    }

    public SyndGenerator toSynd(SyndGenerator value) {
        if (value == null) {
            return value;
        }
        super.toSynd(value);
        value.setUri(getUri());
        value.setVersion(getVersion());
        return value;
    }

    /**
     * Gets the value of uri.
     * 
     * @return possible object is {@link String }
     */
    public String getUri() {
        return uri;
    }

    /**
     * Sets the value of uri.
     * 
     * @param value allowed object is {@link String }
     */
    public void setUri(String value) {
        this.uri = value;
    }

    /**
     * Gets the value of version.
     * 
     * @return possible object is {@link String }
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of version.
     * 
     * @param value allowed object is {@link String }
     */
    public void setVersion(String value) {
        this.version = value;
    }

}
